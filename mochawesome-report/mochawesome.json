{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-20T22:37:52.144Z",
    "end": "2022-02-20T22:37:52.183Z",
    "duration": 39,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b74e53a7-8f1a-40c7-a24b-2e1c97f59b80",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c79b5efc-da04-42a6-8ffe-e2772855f200",
          "title": "Probar la api de productos con chai y supertest",
          "fullFile": "/Users/tepexic/Documents/GitHub/proyecto-final/test/apiTest.test.js",
          "file": "/test/apiTest.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deberia obtener todos los productos con status 200",
              "fullTitle": "Probar la api de productos con chai y supertest Deberia obtener todos los productos con status 200",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.get(\"/productos\");\nexpect(response.status).to.equal(200);\nexpect(response.body).to.be.an(\"array\");",
              "err": {},
              "uuid": "65e45f1e-f424-43f0-bb20-d0d2217704e1",
              "parentUUID": "c79b5efc-da04-42a6-8ffe-e2772855f200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deberia obtener un producto por su id",
              "fullTitle": "Probar la api de productos con chai y supertest Deberia obtener un producto por su id",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.get(`/productos/0`);\nexpect(response.status).to.equal(200);\nexpect(response.body).to.be.an(\"object\");\nexpect(response.body).to.include.keys(\n  \"_id\",\n  \"nombre\",\n  \"descripcion\",\n  \"codigo\",\n  \"precio\",\n  \"foto\",\n  \"stock\"\n);",
              "err": {},
              "uuid": "9ef8a578-7772-4d3e-b51b-4a02680e450b",
              "parentUUID": "c79b5efc-da04-42a6-8ffe-e2772855f200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debería crear un nuevo producto",
              "fullTitle": "Probar la api de productos con chai y supertest Debería crear un nuevo producto",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.post(\"/productos\").send(productoNuevo);\nexpect(response.status).to.equal(201);\nexpect(response.body.data).to.include.keys(\n  \"_id\",\n  \"nombre\",\n  \"descripcion\",\n  \"codigo\",\n  \"precio\",\n  \"foto\",\n  \"stock\"\n);\nexpect(response.body.data).to.eql({\n  _id: response.body.data._id,\n  timestamp: response.body.data.timestamp,\n  ...productoNuevo,\n});",
              "err": {},
              "uuid": "25ce4209-492c-41a2-86bd-bc9537436cd8",
              "parentUUID": "c79b5efc-da04-42a6-8ffe-e2772855f200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debería actualizar un  producto con su id",
              "fullTitle": "Probar la api de productos con chai y supertest Debería actualizar un  producto con su id",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .put(`/productos/${productoId}`)\n  .send(productoModificado);\nexpect(response.status).to.equal(201);\nconst query = await request.get(`/productos/${productoId}`);\nexpect(query.body).to.eql({\n  _id: query.body._id,\n  ...productoModificado,\n});",
              "err": {},
              "uuid": "1feeba9b-98d0-4596-b59c-2986bdd0e8f2",
              "parentUUID": "c79b5efc-da04-42a6-8ffe-e2772855f200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deberia borrar un producto por su id",
              "fullTitle": "Probar la api de productos con chai y supertest Deberia borrar un producto por su id",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.delete(`/productos/${productoId}`);\nexpect(response.status).to.eql(200);\nconst query = await request.get(`/productos/${productoId}`);\nexpect(query.status).to.equal(404);",
              "err": {},
              "uuid": "9a593ade-9e51-434e-b609-c23a0b5d56b7",
              "parentUUID": "c79b5efc-da04-42a6-8ffe-e2772855f200",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65e45f1e-f424-43f0-bb20-d0d2217704e1",
            "9ef8a578-7772-4d3e-b51b-4a02680e450b",
            "25ce4209-492c-41a2-86bd-bc9537436cd8",
            "1feeba9b-98d0-4596-b59c-2986bdd0e8f2",
            "9a593ade-9e51-434e-b609-c23a0b5d56b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}